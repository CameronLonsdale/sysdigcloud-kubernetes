apiVersion: v1
kind: Secret
metadata:
  name: sysdigcloud-pull-secret
  namespace: {{ .sysdigNamespace }}
data:
  .dockerconfigjson: "{{ .sysdigPullSecret }}"
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sysdigcloud-config
  namespace: {{ .sysdigNamespace }}
data:
  #License
  sysdigcloud.license: "{{ .sysdigcloudLicense}}"
  #endpoints
  elasticsearch.url: "{{ .elasticsearchUrl }}"
  redis.endpoint: "{{ .redisEndpoint }}"
  cassandra.endpoint: "{{ .cassandraEndpoint }}"
  mysql.endpoint: "{{ .mysqlEndpoint}}"
  collector.endpoint: "{{ .collectorEndpoint }}"
  collector.port: "{{ .collectorPort }}"
  api.url: "{{ .apiUrl }}"
  #passwords
  sysdigcloud.default.user: "{{ .sysdigcloudDefaultUser }}"
  sysdigcloud.default.user.password: "{{ .sysdigcloudDefaultUserPassword }}"
  cassandra.user: "{{ .cassandraUser }}"
  cassandra.password: "{{ .cassandraPassword }}"
  redis.password: "{{ .redisPassword }}"
  mysql.user: "{{ .mysqlUser }}"
  mysql.password: "{{ .mysqlPassword }}"
  mysql.root.user: "{{ .mysqlRootUser }}"
  mysql.root.password: "{{ .mysqlRootPassword }}"
  #jvm options
  cassandra.jvm.options: "{{ .cassandraJvmOptions }}"
  elasticsearch.jvm.options: "{{ .elasticsearchJvmOptions }}"
  sysdigcloud.jvm.options: "{{ .sysdigcloudJvmOptions }}"
  #Cassandra
  cassandra.cluster.name: "{{ .cassandraClusterName }}"
  cassandra.service: "{{ .cassandraService }}"
  cassandra.seeds: "{{ .cassandraSeeds }}"
  cassandra.seed.provider: "{{ .cassandraSeedProvider }}"
  cassandra.endpoint.snitch: "{{ .cassandraEndpointSnitch }}"
  #cassandra.endpoint.snitch: "EC2Snitch"
  cassandra.start.rpc: "{{ .cassandraStartRpc }}"
  cassandra.secure: "{{ .cassandraSecure }}"
  cassandra.ssl.enabled: "{{ .cassandraSslEnabled }}"
  cassandra.ssl.ciphers: "{{ .cassandraSslCiphers }}"
  cassandra.port: "{{ .cassandraPort }}"
  cassandra.replication.factor: "{{ .cassandraReplicationFactor }}"
  sysdigcloud.captures.cassandra.storage: "{{ .sysdigcloudCapturesCassandraStorage }}"
  #smtp
  smtp.server: "{{ .smtpServer }}"
  smtp.server.port: "{{ .smtpServerPort }}"
  smtp.user: "{{ .smtpUser }}"
  smtp.password: "{{ .smtpPassword }}"
  smtp.tls: "{{ .smtpTls }}"
  smtp.ssl: "{{ .smtpSsl }}"
  smtp.from.address: "{{ .smtpFromAddress }}"
  #logging
  sysdigcloud.logging.stdout: "{{ .sysdigcloudLoggingStdout }}"
  #Auth and LDAP
  sysdigcloud.restrict.password.login: "{{ .sysdigcloudRestrictPasswordLogin }}"
  sysdigcloud.oauth.allowed.domains.list: "{{ .sysdigcloudOauthAllowedDomainsList }}"
  sysdigcloud.google.oauth.client.id: "{{ .sysdigcloudGoogleOauthClientId }}"
  sysdigcloud.google.oauth.client.secret: "{{ .sysdigcloudGoogleOauthClientSecret }}"
  sysdigcloud.ldap.enabled: "{{ .sysdigcloudLdapEnabled }}"
  sysdigcloud.ldap.endpoint: "{{ .sysdigcloudLdapEndpoint }}"
  sysdigcloud.ldap.manager.dn: "{{ .sysdigcloudLdapManagerDn }}"
  sysdigcloud.ldap.manager.password: "{{ .sysdigcloudLdapManagerPassword }}"
  sysdigcloud.ldap.root.dn: "{{ .sysdigcloudLdapManagerPassword }}"
  sysdigcloud.ldap.user.search.base: "{{ .sysdigcloudLdapRootDn }}"
  sysdigcloud.ldap.user.search.filter: "{{ .sysdigcloudLdapUserSearchBase }}"
  sysdigcloud.ldap.group.search.base: "{{ .sysdigcloudLdapUserSearchFilter }}"
  sysdigcloud.ldap.group.search.filter: "{{ .sysdigcloudLdapGroupSearchBase }}"
  sysdigcloud.ldap.group.membership.filter: "{{ .sysdigcloudLdapGroupSearchFilter }}"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sysdigcloud-mysql-config
  namespace: sysdigcloud
  labels:
    app: sysdigcloud
data:
  master.cnf: |-
    [client]
    port   = 3306
    socket   = /var/run/mysqld/mysqld.sock
    default-character-set=utf8

    [mysql]
    default-character-set=utf8
    [mysqld_safe]
    pid-file = /var/run/mysqld/mysqld.pid
    socket   = /var/run/mysqld/mysqld.sock
    nice   = 0
    [mysqld]
    user   = mysql
    pid-file = /var/run/mysqld/mysqld.pid
    socket   = /var/run/mysqld/mysqld.sock
    port   = 3306
    basedir    = /usr
    datadir    = /var/lib/mysql
    tmpdir   = /tmp
    lc-messages-dir  = /usr/share/mysql
    explicit_defaults_for_timestamp
    collation-server = utf8_unicode_ci
    init-connect='SET NAMES utf8'
    character-set-server = utf8
    log-error  = /var/log/mysql/error.log
    # Recommended in standard MySQL setup
    sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES
    # Added by Yofti - Jan 8, 2018
    open_files_limit = 16384
    max_connections = 100000
    # Disabling symbolic-links is recommended to prevent assorted security risks
    symbolic-links=0
    # Replicate to slaves
    log-bin=sdc-mysql-0-bin
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sysdigcloud-mysql-config-slave
  namespace: sysdigcloud
  labels:
    app: sysdigcloud-mysql-slave
data:
  slave.cnf: |-
    [client]
    port   = 3306
    socket   = /var/run/mysqld/mysqld.sock
    default-character-set=utf8

    [mysql]
    default-character-set=utf8
    [mysqld_safe]
    pid-file = /var/run/mysqld/mysqld.pid
    socket   = /var/run/mysqld/mysqld.sock
    nice   = 0
    [mysqld]
    user   = mysql
    pid-file = /var/run/mysqld/mysqld.pid
    socket   = /var/run/mysqld/mysqld.sock
    port   = 3306
    basedir    = /usr
    datadir    = /var/lib/mysql
    tmpdir   = /tmp
    lc-messages-dir  = /usr/share/mysql
    explicit_defaults_for_timestamp
    collation-server = utf8_unicode_ci
    init-connect='SET NAMES utf8'
    character-set-server = utf8
    log-error  = /var/log/mysql/error.log
    # Recommended in standard MySQL setup
    sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES
    # Added by Yofti - Jan 8, 2018
    open_files_limit = 16384
    max_connections = 100000
    # Disabling symbolic-links is recommended to prevent assorted security risks
    symbolic-links=0
    # Writes from master only
    super-read-only
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sysdigcloud-redis-config
  namespace: sysdigcloud
  labels:
    app: sysdigcloud
    role: redis
data:
  redis.conf: |+
    tcp-backlog 65536
    maxclients 30000
    cluster-enabled no
    cluster-require-full-coverage no
    cluster-node-timeout 15000
    cluster-config-file /data/nodes.conf
    cluster-migration-barrier 1
    appendonly yes
    protected-mode no
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sysdigcloud-redis-config-slave
  namespace: sysdigcloud
  labels:
    app: sysdigcloud
    role: redis-slave
data:
  redis.conf: |+
    tcp-backlog 65536
    maxclients 30000
    cluster-enabled no 
    cluster-require-full-coverage no
    cluster-node-timeout 15000
    cluster-config-file /data/nodes.conf
    cluster-migration-barrier 1
    appendonly yes
    protected-mode no
    slave-serve-stale-data yes
    slaveof sdc-redis-0.sdc-redis.sysdigcloud.svc.cluster.local 6379

